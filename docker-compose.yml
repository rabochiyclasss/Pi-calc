services:
  redis:
    image: redis:7-alpine
    container_name: pi_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
      build: .
      container_name: pi_api
      ports:
        - "5000:5000"
      environment:
        - CELERY_BROKER_URL=redis://redis:6379/0
        - CELERY_RESULT_BACKEND=redis://redis:6379/0
      depends_on:
        - redis
      volumes:
        - ./app.py:/app/app.py

  celery_worker:
    build: .
    container_name: pi_celery_worker
    command: celery -A app.celery worker --loglevel=info --concurrency=2
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./app.py:/app/app.py
    restart: unless-stopped

networks:
  default:
    name: pi_calculator_network